{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/mipalgu\/swift-whiteboard"},{"text":" wraps the high-speed, concurrency-safe ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/mipalgu\/gusimplewhiteboard"},{"text":" C library for use in Swift.  The package provides a sendable ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard"},{"text":" class that allows concurrent read and write access to a common message base.  Message slots can be configured by conforming to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/WhiteboardSlot"},{"text":" protocol.  You can create your own type-safe messages through conformance to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/WhiteboardSlotted"},{"text":" protocol.","type":"text"}],"type":"paragraph"},{"anchor":"Usage","text":"Usage","level":2,"type":"heading"},{"inlineContent":[{"text":"Typically, you need to embed this package into your own project (see ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/GettingStarted","type":"reference"},{"text":") using the ","type":"text"},{"isActive":true,"identifier":"https:\/\/swift.org\/package-manager\/","type":"reference"},{"text":".  After installing the prerequisites, add this package as a dependency to your ","type":"text"},{"code":"Package.swift","type":"codeVoice"},{"text":" file, e.g.:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ swift-tools-version:5.6","","import PackageDescription","","let package = Package(name: \"MyPackage\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/mipalgu\/swift-whiteboard.git\", branch: \"main\"),","    ],    ","    targets: [","        .target(name: \"MyPackage\",","                dependencies: [","                    .product(name: \"Whiteboard\", package: \"swift-whiteboard\")","                ]","        )","    ]",")"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/Whiteboard\/documentation\/Whiteboard"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/Package"},"topicSections":[{"identifiers":["doc:\/\/Whiteboard\/documentation\/Whiteboard\/GettingStarted"],"title":"Essentials"},{"identifiers":["doc:\/\/Whiteboard\/documentation\/Whiteboard\/MessageSlots"],"title":"Message Slots"},{"identifiers":["doc:\/\/Whiteboard\/documentation\/Whiteboard\/TypeSafety"],"title":"Type-Safe Messaging"},{"identifiers":["doc:\/\/Whiteboard\/documentation\/Whiteboard\/Concurrency"],"title":"Concurrency"},{"identifiers":["doc:\/\/Whiteboard\/documentation\/Whiteboard\/LowLevel"],"title":"Low-level Interface"}],"abstract":[{"text":"A Swift shared-memory implementation of the blackboard knowledge base communication architecture.","type":"text"}],"variants":[{"paths":["\/documentation\/whiteboard\/package"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"collectionGroup","modules":[{"name":"Whiteboard"}],"title":"Whiteboard Package"},"kind":"article","sections":[],"references":{"doc://Whiteboard/documentation/Whiteboard/LowLevel":{"title":"Interaction with the low-level C Whiteboard","type":"topic","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/LowLevel","abstract":[{"text":"It is important to keep in mind that the underlying C implementation does not sanity-check the values provided to its functions.  While this has performance benefits, it makes the interface potentially unsafe when provided with invalid parameters or messages that do not fit inside their allotted slots.  Fortunately, Swift is a type-safe language with safety by default and ","type":"text"},{"identifier":"https:\/\/github.com\/mipalgu\/gusimplewhiteboard","type":"reference","isActive":true},{"text":" exposes these fundamental limits.","type":"text"}],"role":"article","url":"\/documentation\/whiteboard\/lowlevel","kind":"article"},"https://github.com/mipalgu/swift-whiteboard":{"title":"Whiteboard Package","type":"link","identifier":"https:\/\/github.com\/mipalgu\/swift-whiteboard","titleInlineContent":[{"text":"Whiteboard Package","type":"text"}],"url":"https:\/\/github.com\/mipalgu\/swift-whiteboard"},"doc://Whiteboard/documentation/Whiteboard/TypeSafety":{"identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/TypeSafety","role":"article","type":"topic","title":"Type Safety","kind":"article","abstract":[{"type":"text","text":"Swift is a strongly-typed language that allows to use safe, strongly typed messages on the whiteboard."}],"url":"\/documentation\/whiteboard\/typesafety"},"doc://Whiteboard/documentation/Whiteboard/GettingStarted":{"title":"Getting started with the Whiteboard","type":"topic","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/GettingStarted","abstract":[{"text":"Create a Whiteboard, then read (get) or write (post) messages.","type":"text"}],"role":"article","url":"\/documentation\/whiteboard\/gettingstarted","kind":"article"},"doc://Whiteboard/documentation/Whiteboard/Concurrency":{"title":"Concurrency","type":"topic","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/Concurrency","abstract":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard","type":"reference","isActive":true},{"text":" offers high-performance, lock-free access to shared memory for an arbitrary number of concurrent readers and a single writer for each message type at any given time.  This provides the ability for a writer to broadcast state messages with pull semantics to a large number of readers.","type":"text"}],"role":"article","url":"\/documentation\/whiteboard\/concurrency","kind":"article"},"doc://Whiteboard/documentation/Whiteboard":{"abstract":[],"type":"topic","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard","title":"Whiteboard","role":"collection","url":"\/documentation\/whiteboard","kind":"symbol"},"doc://Whiteboard/documentation/Whiteboard/WhiteboardSlot":{"navigatorTitle":[{"text":"WhiteboardSlot","kind":"identifier"}],"abstract":[{"type":"text","text":"Marker Protocol for a "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":" type (such as an "},{"type":"codeVoice","code":"enum"},{"type":"text","text":") that denotes a whiteboard slot"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WhiteboardSlot","kind":"identifier"}],"title":"WhiteboardSlot","url":"\/documentation\/whiteboard\/whiteboardslot","role":"symbol","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/WhiteboardSlot","kind":"symbol","type":"topic"},"doc://Whiteboard/documentation/Whiteboard/MessageSlots":{"title":"Whiteboard Message Slots","type":"topic","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/MessageSlots","abstract":[{"text":"The shared memory region that constitutes the whiteboard is subdivided into individual fixed and equal-size message slots.  For the whiteboard, this is simply a subdivision of memory that carries no semantic meaning.  The Swift ","type":"text"},{"identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard","type":"reference","isActive":true},{"text":" inherits its sizes from the underlying ","type":"text"},{"identifier":"https:\/\/github.com\/mipalgu\/gusimplewhiteboard","type":"reference","isActive":true},{"text":" implementation.","type":"text"}],"role":"article","url":"\/documentation\/whiteboard\/messageslots","kind":"article"},"https://github.com/mipalgu/gusimplewhiteboard":{"title":"gusimplewhiteboard","type":"link","identifier":"https:\/\/github.com\/mipalgu\/gusimplewhiteboard","titleInlineContent":[{"text":"gusimplewhiteboard","type":"text"}],"url":"https:\/\/github.com\/mipalgu\/gusimplewhiteboard"},"doc://Whiteboard/documentation/Whiteboard/WhiteboardSlotted":{"abstract":[{"type":"text","text":"Protocol for a type that has a statically-assigned whiteboard slot"}],"type":"topic","identifier":"doc:\/\/Whiteboard\/documentation\/Whiteboard\/WhiteboardSlotted","title":"WhiteboardSlotted","role":"symbol","url":"\/documentation\/whiteboard\/whiteboardslotted","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WhiteboardSlotted","kind":"identifier"}],"navigatorTitle":[{"text":"WhiteboardSlotted","kind":"identifier"}]},"https://swift.org/package-manager/":{"title":"Swift Package Manager","type":"link","identifier":"https:\/\/swift.org\/package-manager\/","titleInlineContent":[{"text":"Swift Package Manager","type":"text"}],"url":"https:\/\/swift.org\/package-manager\/"}}}